template:
  name: Build Scan and Deploy CloudRun with Canary
  type: Pipeline
  spec:
    stages:
      - stage:
          name: Preprocessing
          identifier: Preprocessing
          description: ""
          type: Custom
          spec:
            execution:
              steps:
                - step:
                    type: ShellScript
                    name: Prepare Variables
                    identifier: Prepare_Variables
                    spec:
                      shell: Bash
                      executionTarget: {}
                      source:
                        type: Inline
                        spec:
                          script: |-
                            export GAR_HOST=$(echo <+pipeline.variables.docker_image> | cut -d'/' -f1)
                            export GAR_PROJECT=$(echo <+pipeline.variables.docker_image> | cut -d'/' -f2)
                            export GAR_REPOSITORY=$(echo <+pipeline.variables.docker_image> | cut -d'/' -f3-)
                      environmentVariables: []
                      outputVariables:
                        - name: garHost
                          type: String
                          value: GAR_HOST
                        - name: garProject
                          type: String
                          value: GAR_PROJECT
                        - name: garRepository
                          type: String
                          value: GAR_REPOSITORY
                    timeout: 10m
          tags: {}
      - stage:
          name: Build and Scan
          identifier: Build_and_Scan
          template:
            templateRef: account.Build_and_Scan_Hosted_GCP
            versionLabel: "2"
            gitBranch: master
            templateInputs:
              type: CI
              spec:
                execution:
                  steps:
                    - step:
                        identifier: gcpoidc
                        type: Plugin
                        spec:
                          connectorRef: <+input>
                    - step:
                        identifier: BuildAndPushGAR_1
                        type: BuildAndPushGAR
                        spec:
                          connectorRef: <+input>
              variables:
                - name: host
                  type: String
                  value: <+pipeline.stages.Preprocessing.spec.execution.steps.Prepare_Variables.output.outputVariables.garHost>
                - name: project
                  type: String
                  value: <+pipeline.stages.Preprocessing.spec.execution.steps.Prepare_Variables.output.outputVariables.garProject>
                - name: imageRepo
                  type: String
                  value: <+pipeline.stages.Preprocessing.spec.execution.steps.Prepare_Variables.output.outputVariables.garRepository>
                - name: serviceAccountEmailId
                  type: String
                  value: <+input>
                - name: poolId
                  type: String
                  value: <+input>
                - name: providerId
                  type: String
                  value: <+input>
                - name: projectNumber
                  type: String
                  value: <+input>
                - name: imageTag
                  type: String
                  value: <+pipeline.variables.docker_tag>
      - stage:
          name: Deploy to Test
          identifier: Deploy_to_Test
          tags: {}
          template:
            templateRef: account.Deploy_CloudRun_with_Canary
            versionLabel: "1"
            gitBranch: master
            templateInputs:
              type: Deployment
              spec:
                environment:
                  environmentRef: <+input>
                  environmentInputs: <+input>
                  serviceOverrideInputs: <+input>
                  infrastructureDefinitions: <+input>
                service:
                  serviceRef: <+input>
                  serviceInputs: <+input>
      - stage:
          name: Approval
          identifier: Approval
          description: ""
          type: Approval
          spec:
            execution:
              steps:
                - step:
                    name: Approval
                    identifier: Approval
                    type: HarnessApproval
                    timeout: 1d
                    spec:
                      approvalMessage: |-
                        Please review the following information
                        and approve the pipeline progression
                      includePipelineExecutionHistory: true
                      approvers:
                        minimumCount: 1
                        disallowPipelineExecutor: false
                        userGroups: <+input>
                      isAutoRejectEnabled: false
                      approverInputs: []
          tags: {}
      - stage:
          name: Deploy to Prod
          identifier: Deploy_to_Prod
          tags: {}
          template:
            templateRef: account.Deploy_CloudRun_with_Canary
            versionLabel: "1"
            templateInputs:
              type: Deployment
              spec:
                environment:
                  environmentRef: <+input>
                  environmentInputs: <+input>
                  serviceOverrideInputs: <+input>
                  infrastructureDefinitions: <+input>
                service:
                  useFromStage:
                    stage: Deploy_to_Test
    properties:
      ci:
        codebase:
          connectorRef: account.suranc_Account_Level_Connected_Through_Platform
          repoName: spring-forward-harness-example
          build: <+input>
    variables:
      - name: docker_image
        type: String
        description: Full image name of the GAR image to build and deploy
        required: false
        value: <+input>
      - name: docker_tag
        type: String
        description: Docker image tag to build and deploy
        required: false
        value: <+input>
  identifier: Build_Scan_and_Deploy_CloudRun_with_Canary
  versionLabel: "1"
